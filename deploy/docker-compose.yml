version: "3"

services: 
    # Реплики для лучшего распараллеливания между процессорами -----------------------------------------
    text-processor-0:
        image: text-processor-prod
        build: 
            context: .
            dockerfile: Dockerfile
        container_name: text-processor-0
        hostname: text-processor-0
        restart: unless-stopped
        environment: 
            - RGPASS=${RGPASS}
            - RGDSN=${RGDSN}
            - ELASTIC_ENDPOINT=http://es01:9200/
            # - ELASTIC_ENDPOINT=http://13.79.79.34:9094/elasticsearch/
            # - ELASTIC_ENDPOINT=http://dockertest.rgwork.ru:9094/elasticsearch/
            # - ELASTIC_ENDPOINT=http://rg-corpus-caddy:8080/elasticsearch/
            # - ELASTIC_ENDPOINT=http://es01:9200/

        command: [ "python", "-u", "./server.py" ]
        # ports: 
        #     - 5000:5000
    
    # text-processor-1:
    #     image: text-processor-prod
    #     build: 
    #         context: .
    #         dockerfile: Dockerfile
    #     container_name: text-processor-1
    #     hostname: text-processor-1
    #     restart: unless-stopped
    #     environment: 
    #         - RGPASS=${RGPASS}
    #     command: [ "python", "-u", "./server.py" ]

    
    # text-processor-2:
    #     image: text-processor-prod
    #     build: 
    #         context: .
    #         dockerfile: Dockerfile
    #     container_name: text-processor-2
    #     hostname: text-processor-2
    #     restart: unless-stopped
    #     environment: 
    #         - RGPASS=${RGPASS}
    #     command: [ "python", "-u", "./server.py" ]
    
    # text-processor-3:
    #     image: text-processor-prod
    #     build: 
    #         context: .
    #         dockerfile: Dockerfile
    #     container_name: text-processor-3
    #     hostname: text-processor-3
    #     restart: unless-stopped
    #     environment: 
    #         - RGPASS=${RGPASS}
    #     command: [ "python", "-u", "./server.py" ]
    
    # Балансер нагрузки. -------------------------------------------------------------------------------
    # Параметры проксирования определены в Caddyfile
    text-processor-caddy:
        image: caddy:2.0.0-alpine
        container_name: text-processor-caddy
        restart: unless-stopped
        ports:
        - '9555:8080'
        volumes:
        - ./Caddyfile:/etc/caddy/Caddyfile
        - ./www:/www

    # worker для обработки текстов базы данных -----------------------------------------
    text-processor-worker:
        # image: vadimivlev/text-processor-worker:latest
        build: 
            context: .
            dockerfile: Dockerfile
        container_name: text-processor-worker
        hostname: text-processor-worker
        restart: unless-stopped
        environment: 
            - RGDSN=${RGDSN}
            - RGPASS=${RGPASS}
        command: [ "python", "-u", "./process_articles.py" ]
        
# outer network to communicate with other services ----------------------------------------------------
networks:
    default:
        external:
            name: auth_proxy_network